{
    "_ac_count": {
        "default": 0,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The ac_count when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "_alpha_class": {
        "default": [
            0,
            0,
            0,
            0
        ],
        "maxlength": 4,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The alpha class when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "minlength": 4,
        "schema": {
            "max": 1,
            "min": 0,
            "type": [
                "float"
            ]
        },
        "type": "list"
    },
    "_ancestor_a": {
        "default": null,
        "max": 9223372036854775807,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The reference of the most recent ancestor still in existence.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": -9223372036854775808,
        "nullable": true,
        "type": "integer"
    },
    "_ancestor_b": {
        "default": null,
        "max": 9223372036854775807,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The reference of the second most recent ancestor still in existence. May be the same generation as ancestor_a if this GC was sexually concieved.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": -9223372036854775808,
        "nullable": true,
        "type": "integer"
    },
    "_e_count": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The evolvability count when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "min": 0,
            "type": "integer"
        },
        "type": "list"
    },
    "_evolvability": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The evolvability when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "max": 1,
            "min": 0,
            "type": "float"
        },
        "type": "list"
    },
    "_f_count": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The fitness count when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "min": 0,
            "type": "integer"
        },
        "type": "list"
    },
    "_fitness": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The fitness when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "max": 1,
            "min": 0,
            "type": "float"
        },
        "type": "list"
    },
    "_gca": {
        "default": null,
        "max": 9223372036854775807,
        "meta": {
            "types": "em",
            "default_types": "em",
            "description": "A unique internal reference to GCA before it has a signature.",
            "nullable_types": "em",
            "settable_types": ""
        },
        "min": -9223372036854775808,
        "nullable": true,
        "type": "integer"
    },
    "_gcb": {
        "default": null,
        "max": 9223372036854775807,
        "meta": {
            "types": "em",
            "default_types": "em",
            "description": "A unique internal reference to GCB before it has a signature.",
            "nullable_types": "em",
            "settable_types": ""
        },
        "min": -9223372036854775808,
        "nullable": true,
        "type": "integer"
    },
    "_graph": {
        "meta": {
            "types": "em",
            "default_types": "",
            "description": "The internal representation of 'graph'.",
            "nullable_types": "",
            "settable_types": ""
        }
    },
    "_ref": {
        "max": 9223372036854775807,
        "meta": {
            "types": "em",
            "default_types": "em",
            "description": "A unique internal reference to the GC before it has a signature.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": -9223372036854775808,
        "type": "integer",
        "default_setter": "set_ref"
    },
    "_reference_count": {
        "default": 0,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The reference count when the genetic code was copied from the higher layer.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "ac_count": {
        "default": 0,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The weight of the genetic code in its current alpha class position.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "alpha_class": {
        "default": [
            0,
            0,
            0,
            0
        ],
        "maxlength": 4,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The problem space classification of the genetic code. It is a position in 4 dimensional space where each dimension has a range of -1.0 <= x <= 1.0.",
            "nullable_types": "",
            "settable_types": ""
        },
        "minlength": 4,
        "schema": {
            "max": 1,
            "min": 0,
            "type": [
                "float"
            ]
        },
        "type": "list"
    },
    "ancestor_a": {
        "default": null,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The signature of the most recent ancestor still in existence.",
            "nullable_types": "",
            "settable_types": ""
        },
        "nullable": true,
        "oneof": [
            {
                "maxlength": 64,
                "minlength": 64,
                "regex": "[0-9a-f]{64}",
                "type": "string"
            },
            {
                "maxlength": 32,
                "minlength": 32,
                "type": "binary"
            }
        ]
    },
    "ancestor_b": {
        "default": null,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The signature of the second most recent ancestor still in existence. May be the same generation as ancestor_a if this GC was sexually concieved.",
            "nullable_types": "",
            "settable_types": ""
        },
        "nullable": true,
        "oneof": [
            {
                "maxlength": 64,
                "minlength": 64,
                "regex": "[0-9a-f]{64}",
                "type": "string"
            },
            {
                "maxlength": 32,
                "minlength": 32,
                "type": "binary"
            }
        ]
    },
    "code_depth": {
        "default": 1,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The depth of the code vertex graph.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 1,
        "type": "integer"
    },
    "codon_depth": {
        "default": 1,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The depth of the graph after expansion to codon vertices.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 1,
        "type": "integer"
    },
    "created": {
        "check_with": "valid_created",
        "default_setter": "set_created",
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The UTC date and time of the codes creation. If the genetic code has been created in another microbiome at an earlier time then this field will be updated.",
            "nullable_types": "",
            "settable_types": ""
        },
        "oneof": [
            {
                "maxlength": 27,
                "minlength": 27,
                "regex": "20[2-9][0-9]-(1[0-2]|0[1-9])-([0-2][0-9]|3[01])T[0-2][0-9](:[0-5][0-9]){2}\\.[0-9]{6}Z",
                "type": "string"
            },
            {
                "type": "datetime"
            }
        ]
    },
    "creator": {
        "default": null,
        "maxlength": 36,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The UUID identifying the creator. If the genetic code has been created in another microbiome at an earlier time then this field will be updated.",
            "nullable_types": "",
            "settable_types": ""
        },
        "minlength": 36,
        "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
        "type": "string"
    },
    "e_count": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of evolvability updates in this genetic codes life time.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "min": 0,
            "type": "integer"
        },
        "type": "list"
    },
    "evolvability": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "A measure of success of the genetic codes descendants. The higher the better.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "max": 1,
            "min": 0,
            "type": "float"
        },
        "type": "list"
    },
    "f_count": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of fitness updates in this genetic codes life time.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "min": 0,
            "type": "integer"
        },
        "type": "list"
    },
    "fitness": {
        "default": [
            0
        ],
        "meta": {
            "types": "",
            "default_types": "",
            "description": "A measure of success of the genetic code. The higher the better.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "default": 0,
            "max": 1,
            "min": 0,
            "type": "float"
        },
        "type": "list"
    },
    "gca": {
        "default": null,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The signature of Genetic Code A or NULL if this genetic code is a codon. Its connectivity to the Inputs, Constants, genetic code B and outputs are defined in the 'graph'.",
            "nullable_types": "",
            "settable_types": ""
        },
        "nullable": true,
        "oneof": [
            {
                "maxlength": 64,
                "minlength": 64,
                "regex": "[0-9a-f]{64}",
                "type": "string"
            },
            {
                "maxlength": 32,
                "minlength": 32,
                "type": "binary"
            }
        ]
    },
    "gcb": {
        "default": null,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The signature of Genetic Code B or NULL if it is not connected to anything. Connectivity to the Inputs, Constants, genetic code A and outputs are defined in the 'graph'.",
            "nullable_types": "",
            "settable_types": ""
        },
        "nullable": true,
        "oneof": [
            {
                "maxlength": 64,
                "minlength": 64,
                "regex": "[0-9a-f]{64}",
                "type": "string"
            },
            {
                "maxlength": 32,
                "minlength": 32,
                "type": "binary"
            }
        ]
    },
    "generation": {
        "default": 0,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of generations of genetic code evolved to create this code. A codon is always generation 1. This value may change if the creator changes.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "graph": {
        "meta": {
            "types": "",
            "default_types": "",
            "description": "Defines the sub-codes of the genetic code and how they are connected together.",
            "nullable_types": "",
            "settable_types": ""
        },
        "required": true,
        "schema": {
            "A": {
                "required": false,
                "schema": {
                    "items": [
                        {
                            "allowed": [
                                "I",
                                "C"
                            ],
                            "type": "string"
                        },
                        {
                            "max": 255,
                            "min": 0,
                            "type": "integer"
                        },
                        {
                            "max": 32767,
                            "min": -32768,
                            "type": [
                                "integer",
                                "string"
                            ]
                        }
                    ],
                    "maxlength": 3,
                    "minlength": 3,
                    "type": "list"
                },
                "type": "list"
            },
            "B": {
                "required": false,
                "schema": {
                    "items": [
                        {
                            "allowed": [
                                "I",
                                "C",
                                "A"
                            ],
                            "type": "string"
                        },
                        {
                            "max": 255,
                            "min": 0,
                            "type": "integer"
                        },
                        {
                            "max": 32767,
                            "min": -32768,
                            "type": [
                                "integer",
                                "string"
                            ]
                        }
                    ],
                    "maxlength": 3,
                    "minlength": 3,
                    "type": "list"
                },
                "type": "list"
            },
            "C": {
                "required": false,
                "schema": {
                    "items": [
                        {
                            "max": 32767,
                            "min": -32768,
                            "type": [
                                "integer",
                                "string"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "maxlength": 2,
                    "minlength": 2,
                    "type": "list"
                },
                "type": "list"
            },
            "F": {
                "maxlength": 1,
                "minlength": 1,
                "required": false,
                "schema": {
                    "items": [
                        {
                            "allowed": [
                                "I"
                            ],
                            "type": "string"
                        },
                        {
                            "max": 255,
                            "min": 0,
                            "type": "integer"
                        },
                        {
                            "allowed": [
                                "bool",
                                "16900"
                            ],
                            "type": [
                                "integer",
                                "string"
                            ]
                        }
                    ],
                    "maxlength": 3,
                    "minlength": 3,
                    "type": "list"
                },
                "type": "list"
            },
            "O": {
                "required": true,
                "schema": {
                    "items": [
                        {
                            "allowed": [
                                "I",
                                "C",
                                "A",
                                "B"
                            ],
                            "type": "string"
                        },
                        {
                            "max": 255,
                            "min": 0,
                            "type": "integer"
                        },
                        {
                            "max": 32767,
                            "min": -32768,
                            "type": [
                                "integer",
                                "string"
                            ]
                        }
                    ],
                    "maxlength": 3,
                    "minlength": 3,
                    "type": "list"
                },
                "type": "list"
            },
            "P": {
                "required": false,
                "schema": {
                    "items": [
                        {
                            "allowed": [
                                "I",
                                "C",
                                "A",
                                "B"
                            ],
                            "type": "string"
                        },
                        {
                            "max": 255,
                            "min": 0,
                            "type": "integer"
                        },
                        {
                            "max": 32767,
                            "min": -32768,
                            "type": [
                                "integer",
                                "string"
                            ]
                        }
                    ],
                    "maxlength": 3,
                    "minlength": 3,
                    "type": "list"
                },
                "type": "list"
            },
            "U": {
                "required": false,
                "schema": {
                    "items": [
                        {
                            "allowed": [
                                "I",
                                "C",
                                "A",
                                "B"
                            ],
                            "type": "string"
                        },
                        {
                            "max": 255,
                            "min": 0,
                            "type": "integer"
                        },
                        {
                            "max": 32767,
                            "min": -32768,
                            "type": [
                                "integer",
                                "string"
                            ]
                        }
                    ],
                    "maxlength": 3,
                    "minlength": 3,
                    "type": "list"
                },
                "type": "list"
            }
        },
        "type": "dict"
    },
    "input_types": {
        "default_setter": "set_input_types",
        "maxlength": 256,
        "meta": {
            "types": "emapx",
            "default_types": "",
            "description": "The set of types of the inputs in ascending order of type number.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "max": 32767,
            "min": -32768,
            "type": [
                "integer",
                "string"
            ]
        },
        "type": "list"
    },
    "inputs": {
        "default_setter": "set_input_indices",
        "meta": {
            "types": "emapx",
            "default_types": "",
            "description": "The index of the each input parameters type in the 'input_types' list in the order they are required for the function call.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "check_with": "valid_type_input_index",
            "max": 255,
            "min": 0,
            "type": [
                "integer"
            ]
        },
        "type": "list"
    },
    "meta_data": {
        "default": {},
        "meta": {
            "types": "",
            "default_types": "",
            "description": "Other data associated with this genetic code.",
            "nullable_types": "",
            "settable_types": ""
        },
        "required": true,
        "schema": {
            "extended_class": {
                "type": "dict"
            },
            "extended_properties": {
                "type": "dict"
            },
            "function": {
                "keysrules": {
                    "type": "string"
                },
                "schema": {
                    "python3": {
                        "required": true
                    }
                },
                "type": "dict",
                "valuesrules": {
                    "keysrules": {
                        "regex": "[0-9]*",
                        "type": "string"
                    },
                    "schema": {
                        "0": {
                            "required": true
                        }
                    },
                    "type": "dict",
                    "valuesrules": {
                        "schema": {
                            "callable": {
                                "check_with": "valid_callable",
                                "maxlength": 128,
                                "minlength": 1,
                                "type": "string"
                            },
                            "code": {
                                "maxlength": 1024,
                                "minlength": 1,
                                "type": "string"
                            },
                            "imports": {
                                "maxlength": 32,
                                "schema": {
                                    "schema": {
                                        "module": {
                                            "maxlength": 64,
                                            "minlength": 1,
                                            "required": true,
                                            "type": "string"
                                        },
                                        "object": {
                                            "maxlength": 64,
                                            "minlength": 1,
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "type": "list"
                            },
                            "inline": {
                                "check_with": "valid_inline",
                                "maxlength": 1024,
                                "minlength": 1,
                                "required": true,
                                "type": "string"
                            }
                        },
                        "type": "dict"
                    }
                }
            },
            "name": {
                "maxlength": 255,
                "type": "string"
            }
        },
        "type": "dict"
    },
    "num_codes": {
        "default": 1,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of vertices in the code vertex graph.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 1,
        "type": "integer"
    },
    "num_inputs": {
        "default_setter": "set_num_inputs",
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of inputs to the genetic code.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "num_outputs": {
        "default_setter": "set_num_outputs",
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of outputs of the genetic code.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 1,
        "type": "integer"
    },
    "num_unique_codes": {
        "default": 1,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of unique codes in the code vertex graph.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 1,
        "type": "integer"
    },
    "opt_num_codons": {
        "default_setter": "set_opt_num_codons",
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of verticies in the codon vertex graph after optimisation. As optimisations improve this value may change.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "output_types": {
        "default_setter": "set_output_types",
        "meta": {
            "types": "emapx",
            "default_types": "",
            "description": "The set of types of the outputs in ascending order of type number.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "max": 32767,
            "min": -32768,
            "type": [
                "integer",
                "string"
            ]
        },
        "type": "list"
    },
    "outputs": {
        "default_setter": "set_output_indices",
        "meta": {
            "types": "emapx",
            "default_types": "",
            "description": "The index of the each output parameters type in the 'output_types' list in the order they are returned from the function call.",
            "nullable_types": "",
            "settable_types": ""
        },
        "schema": {
            "check_with": "valid_type_output_index",
            "max": 255,
            "min": 0,
            "type": [
                "integer"
            ]
        },
        "type": "list"
    },
    "pgc": {
        "default": null,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The physical GC that created this GC.",
            "nullable_types": "",
            "settable_types": ""
        },
        "nullable": true,
        "oneof": [
            {
                "maxlength": 64,
                "minlength": 64,
                "regex": "[0-9a-f]{64}",
                "type": "string"
            },
            {
                "maxlength": 32,
                "minlength": 32,
                "type": "binary"
            }
        ]
    },
    "properties": {
        "default": {},
        "max": 9223372036854775807,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The properties of the inputs & outputs",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": -9223372036854775808,
        "schema": {
            "arithmetic": {
                "default": false,
                "type": "boolean"
            },
            "bitwise": {
                "default": false,
                "type": "boolean"
            },
            "boolean": {
                "default": false,
                "type": "boolean"
            },
            "conditional": {
                "default": false,
                "type": "boolean"
            },
            "constant": {
                "default": false,
                "type": "boolean"
            },
            "deterministic": {
                "default": false,
                "type": "boolean"
            },
            "extended": {
                "default": false,
                "type": "boolean"
            },
            "logical": {
                "default": false,
                "type": "boolean"
            },
            "memory_modify": {
                "default": false,
                "type": "boolean"
            },
            "object_modify": {
                "default": false,
                "type": "boolean"
            },
            "physical": {
                "default": false,
                "type": "boolean"
            },
            "sequence": {
                "default": false,
                "type": "boolean"
            }
        },
        "type": [
            "dict",
            "integer"
        ]
    },
    "raw_num_codons": {
        "default": 1,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of verticies in the codon vertex graph.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 1,
        "type": "integer"
    },
    "reference_count": {
        "default": 0,
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The number of times this code is referenced in other codes. If this code is referenced by code A once and no other then the reference count is 1. If genetic code X is then referenced by genetic code Y this code is referenced by both X & Y (through X) and the count is 2.",
            "nullable_types": "",
            "settable_types": ""
        },
        "min": 0,
        "type": "integer"
    },
    "signature": {
        "default_setter": "set_signature",
        "meta": {
            "types": "",
            "default_types": "",
            "description": "Unique identifier for this genetic code dervived from its essential characteristics.",
            "nullable_types": "",
            "settable_types": ""
        },
        "oneof": [
            {
                "maxlength": 64,
                "minlength": 64,
                "regex": "[0-9a-f]{64}",
                "type": "string"
            },
            {
                "maxlength": 32,
                "minlength": 32,
                "type": "binary"
            }
        ]
    },
    "updated": {
        "check_with": "valid_created",
        "default_setter": "set_created",
        "meta": {
            "types": "",
            "default_types": "",
            "description": "The UTC date and time of the last modification to this genetic code.",
            "nullable_types": "",
            "settable_types": ""
        },
        "oneof": [
            {
                "maxlength": 27,
                "minlength": 27,
                "regex": "20[2-9][0-9]-(1[0-2]|0[1-9])-([0-2][0-9]|3[01])T[0-2][0-9](:[0-5][0-9]){2}\\.[0-9]{6}Z",
                "type": "string"
            },
            {
                "type": "datetime"
            }
        ]
    }
}